@model PageViewModel
@{
                /**/

                ViewBag.Title = SiteStrings.EditPage_Title;
                string myGuid = Guid.NewGuid().ToString();
}

<script src="~/node_modules/markdown-it/dist/markdown-it.js?v=@(myGuid)"></script>
<script src="~/node_modules/to-mark/dist/to-mark.js?v=@(myGuid)"></script>
<script src="~/node_modules/tui-code-snippet/dist/tui-code-snippet.js?v=@(myGuid)"></script>
<script src="~/node_modules/codemirror/lib/codemirror.js?v=@(myGuid)"></script>
<script src="~/node_modules/highlight.js/lib/highlight.js?v=@(myGuid)"></script>
<script src="~/node_modules/squire-rte/build/squire-raw.js?v=@(myGuid)"></script>
<script src="~/node_modules/tui-editor/dist/tui-editor-Editor-all.min.js?v=@(myGuid)"></script>
<script src="~/node_modules/tui-editor/dist/tui-editor-extScrollSync.min.js"></script>


<style>

    ul.ui-autocomplete {
        /*color: green !important;*/
        -moz-border-radius: 4px;
        border-radius: 4px;
    }

    .ui-menu li {
        /*list-style-type: none;
        display: inline;*/
        line-height: 1;
    }
</style>
<style type="text/css">
    .custom-button {
        float: left;
        box-sizing: border-box;
        outline: none;
        cursor: pointer;
        background-color: #fff;
        width: 24px;
        height: 24px;
        border-radius: 0;
        margin: 5px;
        padding: 3px 0px 3px 0px;
        border: 1px solid #fff;
        display: flex;
        justify-content: center;
        align-items: center;
    }

        .custom-button:hover {
            border-width: 2;
            border-color: #aaa;
        }
</style>
<style>
    .video-responsive {
        overflow: hidden;
        padding-bottom: 56.25%;
        position: relative;
        height: 0;
    }

        .video-responsive iframe {
            left: 0;
            top: 0;
            height: 100%;
            width: 100%;
            position: absolute;
        }

    .pdf-responsive {
        overflow: hidden;
        padding-bottom: 130%;
        position: relative;
        height: 0;
    }

        .pdf-responsive iframe {
            left: 0;
            top: 0;
            height: 100%;
            width: 100%;
            position: absolute;
        }
</style>

<script src="~/Assets/Scripts/jquery/tui-editor-extYoutube.js?v=@(myGuid)"></script>
<script src="~/Assets/Scripts/jquery/tui-editor-extPdf.js?v=@(myGuid)"></script>
<link rel="stylesheet" href="~/node_modules/codemirror/lib/codemirror.css">
<link rel="stylesheet" href="~/node_modules/highlight.js/styles/github.css">
<link rel="stylesheet" href="~/node_modules/tui-editor/dist/tui-editor.css">
<link rel="stylesheet" href="~/node_modules/tui-editor/dist/tui-editor-contents-explik.min.css">
<link href="~/Plugins/SyntaxHighlighter/css/shCore.css?version=1.0" rel="stylesheet" type="text/css" />
<link href="~/Plugins/SyntaxHighlighter/css/shThemeMidnight.css?version=1.0" rel="stylesheet" type="text/css" />
<link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.1.0/css/all.css" integrity="sha384-lKuwvrZot6UHsBSfcMvOkWwlCMgc0TaWr+30HWe3a4ltaBwTZhyTEggF5tJv8tbt" crossorigin="anonymous">
<script type="text/javascript">
head.js("@(Url.Content("~"))Plugins/SyntaxHighlighter/javascript/XRegExp.js",
    "@(Url.Content("~"))Plugins/SyntaxHighlighter/javascript/shBrushTS.js",
    function () { SyntaxHighlighter.all(); })
</script>

<script type="text/javascript">

    $(document).ready(function () {

        // KW: Tui Editor initialization
        // Hide some of the original form and form-related elements
        $('#Content').hide();
        $('#previewpanel-container').hide();
        $('#wysiwyg-toolbar').hide();

        var pageTags = [ @(Html.Raw(Model.JavascriptArrayForAllTags())) ];
        var editPage = new Roadkill.Web.EditPage(pageTags);
        var origMD = $('#Content').val();

        // Roadkill-compatible image urls token-rendering rule
        function rk_image_renderer(tokens, idx, options, env, slf) {
            var token = tokens[idx];
            token.attrs[token.attrIndex('alt')][1] =
                slf.renderInlineAsText(token.children, options, env);

            var src = token.attrs[token.attrIndex('src')][1];
            //console.log('img src before: ' + src);
            if (src.indexOf("Attachments") < 0) {
                token.attrs[token.attrIndex('src')][1] = src.replace(/(.+)/, '@(Url.Content("~/Attachments/" + @Model.FilePath))$1');
            }

            return slf.renderToken(tokens, idx, options);
        }

        var mdItHighlight = tui.Editor.markdownitHighlight,
            mdIt = tui.Editor.markdownit;

        mdItHighlight.renderer.rules.image = rk_image_renderer;
        mdIt.renderer.rules.image = rk_image_renderer;

        var theEditor = new tui.Editor({
            el: document.querySelector('#editSection'),
            initialEditType: 'markdown',
            previewStyle: 'vertical',
            height: '450px',
            exts: ['youtube', 'scrollSync', 'pdf'],
            usageStatistics: false,
            useDefaultHTMLSanitizer: false,
            codeBlockLanguages: [ //needed otherwise scrollView exception
                'youtube',
                'pdf',
            ],
            events: {
                change: function () {
                    origMD = theEditor.getMarkdown()
                        .replace(/`[^`]+`/gm, function (match) { return match.replace(/\\/gm, '\\\\'); }) // Escape certain chars within inline code blocks
                        .replace(/\\([,-_.\[])/gm, '$1')    // Unescape important chars
                        .replace(/\\\|/gm, '|');            // Unescape pipe
                    $('#Content').val(origMD);
                }
            },
            hooks: {
                // Inserting images via wysiwyg
                addImageBlobHook: function (blob, callback) {
                    // New web form w params
                    var fd = new FormData();
                    fd.append('destination_folder', '/' + '@Model.FilePath');
                    fd.append('files[]', blob);

                    // POST webform with inserted file to the upload controller
                    $.ajax({
                        url: '@(Url.Content("~/"))FileManager/Upload',
                        data: fd,
                        processData: false,
                        contentType: false,
                        type: 'POST',
                        dataType: 'json',
                        success: function (data) {
                            if (data.status == "error") {
                                alert(data.message);
                                //console.log(data);
                                return;
                            }
                            //console.log(data);
                            callback('@(Url.Content("~/"))' + blob.name, 'Uploaded Image');
                            theEditor.setMarkdown(theEditor.getMarkdown());
                        },
                        error: function (xhr, err) {
                            alert("Error from uploader API");
                        }
                    });

                    return false;
                }
            },
            toolbarItems: [
                'heading',
                'bold',
                'italic',
                'divider',
                'hr',
                'quote',
                'divider',
                'ul',
                'ol',
                'divider',
                'image',
                'link',
                'divider',
                'code',
                'codeblock',
                'table'
            ]
        });

        theEditor.setMarkdown(origMD, false);

        theEditor.eventManager.addEventType('EventHelp');
        theEditor.eventManager.listen('EventHelp', function () {
            //@*@Url.Action("About", "Home", new { tag = "__help" })*@
            var url = '/Home/about/___help/';
            window.open( url);
        });

        var toolbar = theEditor.getUI().getToolbar();
        toolbar.addButton({
            name: 'customize',
            //className: 'fab fa-accessible-icon',
            event: 'EventHelp',
            tooltip: 'Help!',
            $el: $('<div class="custom-button"><i class="glyphicon glyphicon-question-sign"></i></div>')
        }, 1);

        // keep alive mechanism
        setInterval(function () {
            $.ajax({
                type: "POST",
                url: "/Pages/KeepALive",
                success: function (response) { },
                failure: function (response) { },
                error: function (response) { }
            });
        }, 120000);

    });
</script>

<style>
    .searchbar {
        display: none;
    }
</style>

<div id="editpage" class="row">
    <div id="editpage-form-container">
        @Html.BootstrapValidationSummary(SiteStrings.EditPage_Error)

        <form class="form-horizontal" role="form" method="post" id="editpage-form">
            @(Html.HiddenFor<PageViewModel, int>(p => p.Id))
            @(Html.HiddenFor<PageViewModel, string>(p => p.PreviousTitle))
            @(Html.HiddenFor<PageViewModel, string>(p => p.FilePath))

            <div class="form-group">
                <div class="col-sm-12">
                    <label for="Title">@SiteStrings.EditPage_Title_Label</label>
                    @(Html.BootstrapTextBoxFor<PageViewModel, string>(p => p.Title, SiteStrings.EditPage_Title_Label, false, 1))
                </div>
            </div>

            <div class="form-group">
                <div class="col-sm-12">
                    <label for="Title">@SiteStrings.EditPage_Tags_Label</label>
                    @(Html.BootstrapTextBoxFor<PageViewModel, string>(p => p.RawTags, SiteStrings.EditPage_Tags_Label, false, 2))
                </div>
            </div>

            @if (!RoadkillContext.IsAdmin && ViewBag.CompetitionPublicationOnGoing)
            {
                <label for="IsInCompetition" class="checkbox">
                    @(Html.BootstrapCheckBoxFor<PageViewModel>(p => p.IsInCompetition, "", 3))
                    @SiteStrings.EditPage_ParticipateToCompetition
                    @Html.ActionLink((string)ViewBag.CompetitionLabel, "About", "Home", new { tag = ViewBag.CompetitionPageTag }, new { target = "_blank" })
                </label>
                <br />
            }

            <div id="editSection"></div>

            @(Html.TextAreaFor<PageViewModel, string>(p => p.Content, new { @class = "form-control hidden", tabindex = 5 }))

            <div id="editpage-button-container" class="row">
                <div class="col-sm-1">
                    @if (Model.Id > 0)
                    {
                        <h6>@Html.ActionLink(SiteStrings.Button_Cancel, "Index", "Wiki", new { id = Model.Id, title = Model.EncodedTitle }, null)</h6>
                    }
                    else
                    {
                        <h6>@Html.ActionLink(SiteStrings.Button_Cancel, "Index", "Wiki")</h6>
                    }
                </div>
                <div id="editpage-save-button" class="col-sm-11">

                    <input type="submit" class="btn btn-primary saveButton" value="@SiteStrings.Button_Save" tabindex="6" />
                </div>
            </div>

        </form>
    </div>

</div>

@Html.DialogPartial("ToolbarHelp")

